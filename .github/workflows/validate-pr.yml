name: 'CI'
on: pull_request
jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-pnpm

      - uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          reporter: github-pr-check
          eslint_flags: 'app/'

  typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-pnpm

      - uses: EPMatt/reviewdog-action-tsc@v1
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          reporter: github-pr-check
          level: warning

  vitest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-pnpm

      - name: Run tests
        run: pnpm test:ci

      - name: Extract test results
        id: extract-results
        if: failure()
        run: |
          failed_tests=$(jq -c '[.testResults[] | select(.status == "failed") | .assertionResults[] | select(.status == "failed") | {fullTitle: .fullName, message: .failureMessages[0]}]' test-results.json)
          echo "failed_tests=$failed_tests" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@v6
        if: failure()
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          script: |
            const failedTests = JSON.parse(process.env.FAILED_TESTS || "[]");
            const failedCount = failedTests.length;
            const commentBody = failedCount > 0
              ? `\### Failed Tests Summary\n\n**${failedCount} test(s) failed:**\n\n${failedTests.map(test => `- **${test.fullTitle.trim()}**: ${test.message}`).join('\n')}`
              : 'All tests passed successfully!';

            github.rest.issues.createComment({ issue_number: context.issue.number, owner: context.repo.owner, repo: context.repo.repo, body: commentBody });
        env:
          FAILED_TESTS: ${{ steps.extract-results.outputs.failed_tests }}
